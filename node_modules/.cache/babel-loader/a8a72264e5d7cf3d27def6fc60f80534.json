{"ast":null,"code":"var _jsxFileName = \"/home/hammad/Desktop/Image_Recognition_FE/Image_Recognition_FE/src/Components/Particles/Particles.js\";\nimport React from \"react\";\nimport Particles from \"react-tsparticles\";\nimport { loadFull } from \"tsparticles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Prtls = () => {\n  const particlesInit = async main => {\n    // you can initialize the tsParticles instance (main) here, adding custom shapes or presets\n    // this loads the tsparticles package bundle, it's the easiest method for getting everything ready\n    // starting from v2 you can add only the features you need reducing the bundle size\n    await loadFull(main);\n  };\n\n  const particlesLoaded = container => {};\n\n  return /*#__PURE__*/_jsxDEV(Particles, {\n    id: \"tsparticles\",\n    init: particlesInit,\n    loaded: particlesLoaded,\n    options: {\n      // background: {\n      //     color: {\n      //         value: \"#0d47a1\",\n      //     },\n      // },\n      fpsLimit: 150,\n      interactivity: {\n        events: {\n          onClick: {\n            enable: true,\n            mode: \"\"\n          },\n          onHover: {\n            enable: true,\n            mode: \"grab\"\n          },\n          resize: true\n        },\n        modes: {\n          push: {\n            quantity: 4\n          },\n          repulse: {\n            distance: 200,\n            duration: 0.4\n          }\n        }\n      },\n      particles: {\n        color: {\n          value: \"#ffffff\"\n        },\n        links: {\n          color: \"#ffffff\",\n          distance: 200,\n          enable: true,\n          opacity: 0.8,\n          width: 1\n        },\n        collisions: {\n          enable: true\n        },\n        move: {\n          direction: \"none\",\n          enable: true,\n          outModes: {\n            default: \"bounce\"\n          },\n          random: false,\n          speed: 3,\n          straight: false\n        },\n        number: {\n          density: {\n            enable: true,\n            area: 1200\n          },\n          value: 50\n        },\n        opacity: {\n          value: 0.5\n        } // shape: {\n        //     type: \"dot\",\n        // },\n        // size: {\n        //     value: { min: 1, max: 5 },\n        // },\n\n      },\n      detectRetina: true\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 14\n  }, this);\n};\n\n_c = Prtls;\nexport default Prtls;\n\nvar _c;\n\n$RefreshReg$(_c, \"Prtls\");","map":{"version":3,"names":["React","Particles","loadFull","Prtls","particlesInit","main","particlesLoaded","container","fpsLimit","interactivity","events","onClick","enable","mode","onHover","resize","modes","push","quantity","repulse","distance","duration","particles","color","value","links","opacity","width","collisions","move","direction","outModes","default","random","speed","straight","number","density","area","detectRetina"],"sources":["/home/hammad/Desktop/Image_Recognition_FE/Image_Recognition_FE/src/Components/Particles/Particles.js"],"sourcesContent":["import React from \"react\";\nimport Particles from \"react-tsparticles\";\nimport { loadFull } from \"tsparticles\";\nconst Prtls = () => {\n    const particlesInit = async(main) => {\n\n        // you can initialize the tsParticles instance (main) here, adding custom shapes or presets\n        // this loads the tsparticles package bundle, it's the easiest method for getting everything ready\n        // starting from v2 you can add only the features you need reducing the bundle size\n        await loadFull(main);\n    };\n\n    const particlesLoaded = (container) => {\n\n    };\n    return ( <\n        Particles id = \"tsparticles\"\n        init = { particlesInit }\n        loaded = { particlesLoaded }\n        options = {\n            {\n                // background: {\n                //     color: {\n                //         value: \"#0d47a1\",\n                //     },\n                // },\n                fpsLimit: 150,\n                interactivity: {\n                    events: {\n                        onClick: {\n                            enable: true,\n                            mode: \"\",\n                        },\n                        onHover: {\n                            enable: true,\n                            mode: \"grab\",\n                        },\n                        resize: true,\n                    },\n                    modes: {\n                        push: {\n                            quantity: 4,\n                        },\n                        repulse: {\n                            distance: 200,\n                            duration: 0.4,\n                        },\n                    },\n                },\n                particles: {\n                    color: {\n                        value: \"#ffffff\",\n\n                    },\n                    links: {\n                        color: \"#ffffff\",\n                        distance: 200,\n                        enable: true,\n                        opacity: 0.8,\n                        width: 1,\n                    },\n                    collisions: {\n                        enable: true,\n                    },\n                    move: {\n                        direction: \"none\",\n                        enable: true,\n                        outModes: {\n                            default: \"bounce\",\n                        },\n                        random: false,\n                        speed: 3,\n                        straight: false,\n                    },\n                    number: {\n                        density: {\n                            enable: true,\n                            area: 1200,\n                        },\n                        value: 50,\n                    },\n                    opacity: {\n                        value: 0.5,\n                    },\n                    // shape: {\n                    //     type: \"dot\",\n                    // },\n                    // size: {\n                    //     value: { min: 1, max: 5 },\n                    // },\n                },\n                detectRetina: true,\n            }\n        }\n        />\n    );\n};\nexport default Prtls;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,SAASC,QAAT,QAAyB,aAAzB;;;AACA,MAAMC,KAAK,GAAG,MAAM;EAChB,MAAMC,aAAa,GAAG,MAAMC,IAAN,IAAe;IAEjC;IACA;IACA;IACA,MAAMH,QAAQ,CAACG,IAAD,CAAd;EACH,CAND;;EAQA,MAAMC,eAAe,GAAIC,SAAD,IAAe,CAEtC,CAFD;;EAGA,oBAAS,QACL,SADK;IACK,EAAE,EAAG,aADV;IAEL,IAAI,EAAKH,aAFJ;IAGL,MAAM,EAAKE,eAHN;IAIL,OAAO,EACH;MACI;MACA;MACA;MACA;MACA;MACAE,QAAQ,EAAE,GANd;MAOIC,aAAa,EAAE;QACXC,MAAM,EAAE;UACJC,OAAO,EAAE;YACLC,MAAM,EAAE,IADH;YAELC,IAAI,EAAE;UAFD,CADL;UAKJC,OAAO,EAAE;YACLF,MAAM,EAAE,IADH;YAELC,IAAI,EAAE;UAFD,CALL;UASJE,MAAM,EAAE;QATJ,CADG;QAYXC,KAAK,EAAE;UACHC,IAAI,EAAE;YACFC,QAAQ,EAAE;UADR,CADH;UAIHC,OAAO,EAAE;YACLC,QAAQ,EAAE,GADL;YAELC,QAAQ,EAAE;UAFL;QAJN;MAZI,CAPnB;MA6BIC,SAAS,EAAE;QACPC,KAAK,EAAE;UACHC,KAAK,EAAE;QADJ,CADA;QAKPC,KAAK,EAAE;UACHF,KAAK,EAAE,SADJ;UAEHH,QAAQ,EAAE,GAFP;UAGHR,MAAM,EAAE,IAHL;UAIHc,OAAO,EAAE,GAJN;UAKHC,KAAK,EAAE;QALJ,CALA;QAYPC,UAAU,EAAE;UACRhB,MAAM,EAAE;QADA,CAZL;QAePiB,IAAI,EAAE;UACFC,SAAS,EAAE,MADT;UAEFlB,MAAM,EAAE,IAFN;UAGFmB,QAAQ,EAAE;YACNC,OAAO,EAAE;UADH,CAHR;UAMFC,MAAM,EAAE,KANN;UAOFC,KAAK,EAAE,CAPL;UAQFC,QAAQ,EAAE;QARR,CAfC;QAyBPC,MAAM,EAAE;UACJC,OAAO,EAAE;YACLzB,MAAM,EAAE,IADH;YAEL0B,IAAI,EAAE;UAFD,CADL;UAKJd,KAAK,EAAE;QALH,CAzBD;QAgCPE,OAAO,EAAE;UACLF,KAAK,EAAE;QADF,CAhCF,CAmCP;QACA;QACA;QACA;QACA;QACA;;MAxCO,CA7Bf;MAuEIe,YAAY,EAAE;IAvElB;EALC;IAAA;IAAA;IAAA;EAAA,QAAT;AAiFH,CA7FD;;KAAMpC,K;AA8FN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}