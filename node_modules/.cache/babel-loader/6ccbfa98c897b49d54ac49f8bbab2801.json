{"ast":null,"code":"var _jsxFileName = \"/home/hammad/Desktop/Image_Recognition_FE/Image_Recognition_FE/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Clarifai from 'clarifai';\nimport Navigation from './Components/Navigation/Navigation';\nimport Logo from './Components/Logo/Logo';\nimport ImageLinkForm from './Components/ImageLinkFrom/ImageLinkForm';\nimport Rank from './Components/Rank/Rank';\nimport Prtls from './Components/Particles/Particles';\nimport FaceRecognition from './Components/FaceRecognition/FaceRecognition';\nimport SignIn from './Components/signin/SignIn';\nimport Register from './Components/Register/Register';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst raw = new Clarifai.App({\n  apiKey: 'eec46ed0322e4dfab533a8a76f938c64'\n});\nconst initialState = {\n  input: '',\n  IMAGEURL: '',\n  Data: '',\n  route: 'signin',\n  isSignedin: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.DisplayResult = (Data, concepts, concepts1) => {\n      this.setState({\n        Data: concepts\n      });\n      concepts = Data.outputs[0].data.regions[0].data.concepts[0].value;\n      concepts1 = Data.outputs[0].data.regions[0].data.concepts[0].name;\n      console.log(\"There is\", concepts, \"% probability, that its picture of\", concepts1);\n      alert(concepts1);\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onTap = () => {\n      this.setState({\n        IMAGEURL: this.state.input\n      });\n      raw.models.predict(Clarifai.CELEBRITY_MODEL, this.state.input).then(response => {\n        if (response) {\n          fetch('https://young-castle-77342.herokuapp.com/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n          }).catch(console.log);\n        }\n\n        this.DisplayResult(response);\n      }).catch(err => console.log(\"error\", err));\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState(initialState);\n      } else if (route === 'home') {\n        this.setState({\n          isSignedin: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = initialState;\n  }\n\n  render() {\n    const {\n      isSignedin,\n      IMAGEURL,\n      route\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Prtls, {\n        className: \"particles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n        isSignedin: isSignedin,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this), route === 'home' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Rank, {\n          name: this.state.user.name,\n          entries: this.state.user.entries\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), \" \", /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n          onInputChange: this.onInputChange,\n          onTap: this.onTap\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 20\n        }, this), \" \", /*#__PURE__*/_jsxDEV(FaceRecognition, {\n          IMAGEURL: IMAGEURL\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 20\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }, this) : route === 'signin' ? /*#__PURE__*/_jsxDEV(SignIn, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(Register, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 25\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"names":["React","Component","Clarifai","Navigation","Logo","ImageLinkForm","Rank","Prtls","FaceRecognition","SignIn","Register","raw","App","apiKey","initialState","input","IMAGEURL","Data","route","isSignedin","user","id","name","email","entries","joined","constructor","loadUser","data","setState","DisplayResult","concepts","concepts1","outputs","regions","value","console","log","alert","onInputChange","event","target","onTap","state","models","predict","CELEBRITY_MODEL","then","response","fetch","method","headers","body","JSON","stringify","json","count","Object","assign","catch","err","onRouteChange","render"],"sources":["/home/hammad/Desktop/Image_Recognition_FE/Image_Recognition_FE/src/App.js"],"sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Clarifai from 'clarifai';\nimport Navigation from './Components/Navigation/Navigation';\nimport Logo from './Components/Logo/Logo';\nimport ImageLinkForm from './Components/ImageLinkFrom/ImageLinkForm';\nimport Rank from './Components/Rank/Rank';\nimport Prtls from './Components/Particles/Particles';\nimport FaceRecognition from './Components/FaceRecognition/FaceRecognition';\nimport SignIn from './Components/signin/SignIn';\nimport Register from './Components/Register/Register';\n\nconst raw = new Clarifai.App({\n    apiKey: 'eec46ed0322e4dfab533a8a76f938c64'\n});\n\nconst initialState = {\n\n    input: '',\n    IMAGEURL: '',\n    Data: '',\n    route: 'signin',\n    isSignedin: false,\n    user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: '',\n    }\n}\nclass App extends Component {\n    constructor() {\n        super();\n        this.state = initialState;\n    }\n    loadUser = (data) => {\n        this.setState({\n            user: {\n                id: data.id,\n                name: data.name,\n                email: data.email,\n                entries: data.entries,\n                joined: data.joined,\n            }\n        })\n    }\n\n\n    DisplayResult = (Data, concepts, concepts1) => {\n        this.setState({ Data: concepts })\n\n        concepts = Data.outputs[0].data.regions[0].data.concepts[0].value;\n        concepts1 = Data.outputs[0].data.regions[0].data.concepts[0].name;\n        console.log(\"There is\", concepts, \"% probability, that its picture of\", concepts1)\n        alert(concepts1)\n    }\n    onInputChange = (event) => {\n        this.setState({ input: event.target.value });\n    }\n\n    onTap = () => {\n        this.setState({ IMAGEURL: this.state.input });\n        raw.models\n            .predict(Clarifai.CELEBRITY_MODEL, this.state.input)\n\n        .then(response => {\n                if (response) {\n                    fetch('https://young-castle-77342.herokuapp.com/image', {\n                            method: 'put',\n                            headers: { 'Content-Type': 'application/json' },\n                            body: JSON.stringify({\n                                id: this.state.user.id\n                            })\n                        })\n                        .then(response => response.json())\n                        .then(count => {\n                            this.setState(Object.assign(this.state.user, { entries: count }))\n                        })\n                        .catch(console.log)\n                }\n                this.DisplayResult(response)\n            })\n            .catch(err => console.log(\"error\", err));\n\n    }\n    onRouteChange = (route) => {\n        if (route === 'signout') {\n            this.setState(initialState)\n        } else if (route === 'home') {\n            this.setState({ isSignedin: true })\n        }\n        this.setState({ route: route });\n    }\n    render() {\n        const { isSignedin, IMAGEURL, route } = this.state;\n        return (\n\n            <\n            div className = \"App\" >\n            <\n            Prtls className = \"particles\" / >\n            <\n            Logo / >\n            <\n            Navigation isSignedin = { isSignedin }\n            onRouteChange = { this.onRouteChange }\n            />\n\n            {\n                route === 'home' ?\n                    <\n                    div >\n                    <\n                    Rank name = { this.state.user.name }\n                entries = { this.state.user.entries }\n                /> <\n                ImageLinkForm onInputChange = { this.onInputChange }\n                onTap = { this.onTap }\n                /> <\n                FaceRecognition IMAGEURL = { IMAGEURL }\n                /> < /\n                div >: (\n                    route === 'signin' ?\n                    <\n                    SignIn loadUser = { this.loadUser }\n                    onRouteChange = { this.onRouteChange }\n                    />: <\n                    Register loadUser = { this.loadUser }\n                    onRouteChange = { this.onRouteChange }\n                    />\n                )\n            } <\n            /div>\n        );\n    }\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module"}