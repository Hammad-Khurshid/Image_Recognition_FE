{"ast":null,"code":"var _jsxFileName = \"/home/hammad/Desktop/smart_brain/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Clarifai from 'clarifai';\nimport Navigation from './Components/Navigation/Navigation';\nimport Logo from './Components/Logo/Logo';\nimport ImageLinkForm from './Components/ImageLinkFrom/ImageLinkForm';\nimport Rank from './Components/Rank/Rank';\nimport Prtls from './Components/Particles/Particles';\nimport FaceRecognition from './Components/FaceRecognition/FaceRecognition';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ap = new Clarifai.App({\n  apikey: '7e52f36374ba42f08d6eafb5b7b4492c'\n});\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.onInputChange = event => {\n      console.log(event.target.value); // this.setState({input: event.target.value});\n    };\n\n    this.onTap = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.predict( // HEADS UP! Sometimes the Clarifai Models can be down or not working as they are constantly getting updated.\n      // A good way to check if the model you are using is up, is to check them on the clarifai website. For example,\n      // for the Face Detect Mode: https://www.clarifai.com/models/face-detection\n      // If that isn't working, then that means you will have to wait until their servers are back up. Another solution\n      // is to use a different version of their model that works like the ones found here: https://github.com/Clarifai/clarifai-javascript/blob/master/src/index.js\n      // so you would change from:\n      // .predict(Clarifai.FACE_DETECT_MODEL, this.state.input)\n      // to:\n      // .predict('53e1df302c079b3db8a0a36033ed2d15', this.state.input)\n      Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => {\n        console.log('hi', response);\n\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n          });\n        }\n\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(err => console.log(err));\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState({\n          isSignedIn: false\n        });\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = {\n      input: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Prtls, {\n        className: \"particles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(Rank, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n        onInputChange: this.onInputChange,\n        onTap: this.onTap\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"names":["React","Component","Clarifai","Navigation","Logo","ImageLinkForm","Rank","Prtls","FaceRecognition","ap","App","apikey","constructor","onInputChange","event","console","log","target","value","onTap","setState","imageUrl","state","input","app","models","predict","FACE_DETECT_MODEL","then","response","fetch","method","headers","body","JSON","stringify","id","user","json","count","Object","assign","entries","displayFaceBox","calculateFaceLocation","catch","err","onRouteChange","route","isSignedIn","render"],"sources":["/home/hammad/Desktop/smart_brain/src/App.js"],"sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Clarifai from 'clarifai';\nimport Navigation from './Components/Navigation/Navigation';\nimport Logo from './Components/Logo/Logo';\nimport ImageLinkForm from './Components/ImageLinkFrom/ImageLinkForm';\nimport Rank from './Components/Rank/Rank';\nimport Prtls from './Components/Particles/Particles';\nimport FaceRecognition from './Components/FaceRecognition/FaceRecognition';\n\n\nconst ap = new Clarifai.App({\n  apikey: '7e52f36374ba42f08d6eafb5b7b4492c'\n});\nclass  App extends Component {\n  constructor(){\n    super();\n    this.state={\n      input: '',\n    }\n  }\n   onInputChange = (event) => {\n    console.log(event.target.value);\n    // this.setState({input: event.target.value});\n  }\n\n  onTap = ()=>{\n    this.setState({imageUrl: this.state.input});\n    app.models\n      .predict(\n    // HEADS UP! Sometimes the Clarifai Models can be down or not working as they are constantly getting updated.\n    // A good way to check if the model you are using is up, is to check them on the clarifai website. For example,\n    // for the Face Detect Mode: https://www.clarifai.com/models/face-detection\n    // If that isn't working, then that means you will have to wait until their servers are back up. Another solution\n    // is to use a different version of their model that works like the ones found here: https://github.com/Clarifai/clarifai-javascript/blob/master/src/index.js\n    // so you would change from:\n    // .predict(Clarifai.FACE_DETECT_MODEL, this.state.input)\n    // to:\n    // .predict('53e1df302c079b3db8a0a36033ed2d15', this.state.input)\n        Clarifai.FACE_DETECT_MODEL,\n        this.state.input)\n      .then(response => {\n        console.log('hi', response)\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          })\n            .then(response => response.json())\n            .then(count => {\n              this.setState(Object.assign(this.state.user, { entries: count}))\n            })\n\n        }\n        this.displayFaceBox(this.calculateFaceLocation(response))\n      })\n      .catch(err => console.log(err));\n  }\n\n  onRouteChange = (route) => {\n    if (route === 'signout') {\n      this.setState({isSignedIn: false})\n    } else if (route === 'home') {\n      this.setState({isSignedIn: true})\n    }\n    this.setState({route: route});\n  }\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Prtls className=\"particles\"/>\n      <Navigation />\n       <Logo />\n       <Rank />\n      <ImageLinkForm \n      onInputChange={this.onInputChange} \n      onTap={this.onTap} />\n      <FaceRecognition />\n    </div>\n  );\n}\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}